{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"TYPEHASH_REFUND","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"preimage","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address"},{"name":"refundAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claim","inputs":[{"name":"preimage","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"refundAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimBatch","inputs":[{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"preimages","type":"bytes32[]","internalType":"bytes32[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"refundAddresses","type":"address[]","internalType":"address[]"},{"name":"timelocks","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hashValues","inputs":[{"name":"preimageHash","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address"},{"name":"refundAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"lock","inputs":[{"name":"preimageHash","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lockPrepayMinerfee","inputs":[{"name":"preimageHash","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address payable"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"refund","inputs":[{"name":"preimageHash","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address"},{"name":"refundAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"refund","inputs":[{"name":"preimageHash","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"refundCooperative","inputs":[{"name":"preimageHash","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"claimAddress","type":"address","internalType":"address"},{"name":"timelock","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swaps","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"event","name":"Claim","inputs":[{"name":"preimageHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"preimage","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"Lockup","inputs":[{"name":"preimageHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"tokenAddress","type":"address","indexed":false,"internalType":"address"},{"name":"claimAddress","type":"address","indexed":false,"internalType":"address"},{"name":"refundAddress","type":"address","indexed":true,"internalType":"address"},{"name":"timelock","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Refund","inputs":[{"name":"preimageHash","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false}],"bytecode":{"object":"","sourceMap":"141:15071:1:-:0;;;915:518;;;;;;;;;-1:-1:-1;981:271:1;;;1009:95;981:271;;;273:25:59;1122:22:1;314:18:59;;;307:34;;;;1162:14:1;357:18:59;;;350:34;1194:13:1;400:18:59;;;393:34;1233:4:1;443:19:59;;;436:61;245:19;;981:271:1;;;-1:-1:-1;;981:271:1;;;;;;;;;958:304;;981:271;958:304;;;;939:323;;1290:136;1272:154;;141:15071;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106100c25760003560e01c806391644b2b1161007f578063bc586b2811610059578063bc586b281461021e578063cd413efa1461023e578063eb84e7f21461025e578063fb35dd961461029e57600080fd5b806391644b2b146101b7578063a9ab4d5b146101d7578063b8080ab81461020b57600080fd5b80630e5bbd59146100c75780633644e515146100e9578063365047211461013057806354fd4d50146101505780637beb9d6d146101775780638579dc5f14610197575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610cb0565b6102be565b005b3480156100f557600080fd5b5061011d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561013c57600080fd5b506100e761014b366004610d17565b610337565b34801561015c57600080fd5b50610165600481565b60405160ff9091168152602001610127565b34801561018357600080fd5b5061011d610192366004610cb0565b61034c565b3480156101a357600080fd5b506100e76101b2366004610db5565b6103b8565b3480156101c357600080fd5b506100e76101d2366004610d17565b61046a565b3480156101e357600080fd5b5061011d7f000000000000000000000000000000000000000000000000000000000000000081565b6100e7610219366004610d17565b6105c5565b34801561022a57600080fd5b506100e7610239366004610cb0565b6105dc565b34801561024a57600080fd5b506100e7610259366004610d17565b6105f5565b34801561026a57600080fd5b5061028e610279366004610ea1565b60006020819052908152604090205460ff1681565b6040519015158152602001610127565b3480156102aa57600080fd5b506100e76102b9366004610eba565b610603565b438111156103215760405162461bcd60e51b815260206004820152602560248201527f4552433230537761703a207377617020686173206e6f742074696d6564206f756044820152641d081e595d60da1b60648201526084015b60405180910390fd5b61032f8686868686866107b2565b505050505050565b6103458585858533866102be565b5050505050565b60408051602081018890529081018690526bffffffffffffffffffffffff19606086811b82168184015285811b8216607484015284901b166088820152609c810182905260009060bc016040516020818303038152906040528051906020012090509695505050505050565b60008060005b89811015610451578888828181106103d8576103d8610f3a565b9050602002013591506104458b8b838181106103f6576103f6610f3a565b90506020020135838e338b8b8781811061041257610412610f3a565b90506020020160208101906104279190610f50565b8a8a8881811061043957610439610f3a565b9050602002013561081e565b918101916001016103be565b5061045d8b3384610900565b5050505050505050505050565b600084116104cc5760405162461bcd60e51b815260206004820152602960248201527f4552433230537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201526874206265207a65726f60b81b6064820152608401610318565b60006104dc86868686338761034c565b60008181526020819052604090205490915060ff161561053e5760405162461bcd60e51b815260206004820152601e60248201527f4552433230537761703a20737761702065786973747320616c726561647900006044820152606401610318565b60008181526020819052604090819020805460ff1916600117905551339087907fa98eaa2bd8230d87a1a4c356f5c1d41cb85ff88131122ec8b1931cb9d31ae145906105b19089908990899089909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a361032f84333088610a2c565b6105d2858585858561046a565b6103458234610b64565b6105ea86868686868661081e565b61032f848487610900565b6103458585853386866105dc565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091528183018b9052606082018a90526001600160a01b038981166080840152881660a083015260c08083018890528351808403909101815260e08301909352825192019190912061190160f01b6101008301527f00000000000000000000000000000000000000000000000000000000000000006101028301526101228201526000906001906101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610717573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061074d5750856001600160a01b0316816001600160a01b0316145b6107995760405162461bcd60e51b815260206004820152601c60248201527f4552433230537761703a20696e76616c6964207369676e6174757265000000006044820152606401610318565b6107a789898989338a6107b2565b505050505050505050565b60006107c287878787878761034c565b90506107cd81610c1d565b600081815260208190526040808220805460ff191690555188917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a2610815858488610900565b50505050505050565b600060028760405160200161083591815260200190565b60408051601f198184030181529082905261084f91610f74565b602060405180830381855afa15801561086c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061088f9190610fa3565b905060006108a182888888888861034c565b90506108ac81610c1d565b60008181526020818152604091829020805460ff19169055905189815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a25050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161095c9190610f74565b6000604051808303816000865af19150503d8060008114610999576040519150601f19603f3d011682016040523d82523d6000602084013e61099e565b606091505b50915091508180156109c85750805115806109c85750808060200190518101906109c89190610fbc565b6103455760405162461bcd60e51b815260206004820152602f60248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201526e657220455243323020746f6b656e7360881b6064820152608401610318565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610a909190610f74565b6000604051808303816000865af19150503d8060008114610acd576040519150601f19603f3d011682016040523d82523d6000602084013e610ad2565b606091505b5091509150818015610afc575080511580610afc575080806020019051810190610afc9190610fbc565b61032f5760405162461bcd60e51b815260206004820152603360248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366604482015272657246726f6d20455243323020746f6b656e7360681b6064820152608401610318565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610bb1576040519150601f19603f3d011682016040523d82523d6000602084013e610bb6565b606091505b5050905080610c185760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201526732b91022ba3432b960c11b6064820152608401610318565b505050565b60008181526020819052604090205460ff16610c985760405162461bcd60e51b815260206004820152603460248201527f4552433230537761703a207377617020686173206e6f20746f6b656e73206c6f60448201527318dad959081a5b881d1a194818dbdb9d1c9858dd60621b6064820152608401610318565b50565b6001600160a01b0381168114610c9857600080fd5b60008060008060008060c08789031215610cc957600080fd5b86359550602087013594506040870135610ce281610c9b565b93506060870135610cf281610c9b565b92506080870135610d0281610c9b565b9598949750929591949360a090920135925050565b600080600080600060a08688031215610d2f57600080fd5b85359450602086013593506040860135610d4881610c9b565b92506060860135610d5881610c9b565b949793965091946080013592915050565b60008083601f840112610d7b57600080fd5b50813567ffffffffffffffff811115610d9357600080fd5b6020830191508360208260051b8501011115610dae57600080fd5b9250929050565b600080600080600080600080600060a08a8c031215610dd357600080fd5b8935610dde81610c9b565b985060208a013567ffffffffffffffff811115610dfa57600080fd5b610e068c828d01610d69565b90995097505060408a013567ffffffffffffffff811115610e2657600080fd5b610e328c828d01610d69565b90975095505060608a013567ffffffffffffffff811115610e5257600080fd5b610e5e8c828d01610d69565b90955093505060808a013567ffffffffffffffff811115610e7e57600080fd5b610e8a8c828d01610d69565b915080935050809150509295985092959850929598565b600060208284031215610eb357600080fd5b5035919050565b600080600080600080600080610100898b031215610ed757600080fd5b88359750602089013596506040890135610ef081610c9b565b95506060890135610f0081610c9b565b94506080890135935060a089013560ff81168114610f1d57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610f6257600080fd5b8135610f6d81610c9b565b9392505050565b6000825160005b81811015610f955760208186018101518583015201610f7b565b506000920191825250919050565b600060208284031215610fb557600080fd5b5051919050565b600060208284031215610fce57600080fd5b81518015158114610f6d57600080fdfea264697066735822122054a46e03203110cc78b128b95ecc40286f1259fd70441c79c7681bd71e93f79064736f6c634300081c0033","sourceMap":"141:15071:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11243:556;;;;;;;;;;-1:-1:-1;11243:556:1;;;;;:::i;:::-;;:::i;:::-;;291:41;;;;;;;;;;;;;;;;;;1193:25:59;;;1181:2;1166:18;291:41:1;;;;;;;;5825:232;;;;;;;;;;-1:-1:-1;5825:232:1;;;;;:::i;:::-;;:::i;251:33::-;;;;;;;;;;;;283:1;251:33;;;;;2156:4:59;2144:17;;;2126:36;;2114:2;2099:18;251:33:1;1984:184:59;12337:353:1;;;;;;;;;;-1:-1:-1;12337:353:1;;;;;:::i;:::-;;:::i;4225:877::-;;;;;;;;;;-1:-1:-1;4225:877:1;;;;;:::i;:::-;;:::i;8367:970::-;;;;;;;;;;-1:-1:-1;8367:970:1;;;;;:::i;:::-;;:::i;338:40::-;;;;;;;;;;;;;;;2289:428;;;;;;:::i;:::-;;:::i;9992:426::-;;;;;;;;;;-1:-1:-1;9992:426:1;;;;;:::i;:::-;;:::i;3266:455::-;;;;;;;;;;-1:-1:-1;3266:455:1;;;;;:::i;:::-;;:::i;512:37::-;;;;;;;;;;-1:-1:-1;512:37:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5276:14:59;;5269:22;5251:41;;5239:2;5224:18;512:37:1;5111:187:59;6952:838:1;;;;;;;;;;-1:-1:-1;6952:838:1;;;;;:::i;:::-;;:::i;11243:556::-;11639:12;11627:8;:24;;11619:74;;;;-1:-1:-1;;;11619:74:1;;6668:2:59;11619:74:1;;;6650:21:59;6707:2;6687:18;;;6680:30;6746:34;6726:18;;;6719:62;-1:-1:-1;;;6797:18:59;;;6790:35;6842:19;;11619:74:1;;;;;;;;;11703:89;11718:12;11732:6;11740:12;11754;11768:13;11783:8;11703:14;:89::i;:::-;11243:556;;;;;;:::o;5825:232::-;5972:78;5979:12;5993:6;6001:12;6015;6029:10;6041:8;5972:6;:78::i;:::-;5825:232;;;;;:::o;12337:353::-;12591:91;;;;;;7141:19:59;;;7176:12;;;7169:28;;;-1:-1:-1;;7235:2:59;7231:15;;;7227:53;;7213:12;;;7206:75;7315:15;;;7311:53;;7297:12;;;7290:75;7400:15;;;7396:53;7381:13;;;7374:76;7466:13;;;7459:29;;;12555:7:1;;7504:13:59;;12591:91:1;;;;;;;;;;;;12581:102;;;;;;12574:109;;12337:353;;;;;;;;:::o;4225:877::-;4456:14;4484:18;4546:9;4541:459;4561:20;;;4541:459;;;4619:7;;4627:1;4619:10;;;;;;;:::i;:::-;;;;;;;4606:23;;4647:98;4660:9;;4670:1;4660:12;;;;;;;:::i;:::-;;;;;;;4674:10;4686:12;4700:10;4712:15;;4728:1;4712:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4732:9;;4742:1;4732:12;;;;;;;:::i;:::-;;;;;;;4647;:98::i;:::-;4965:20;;;;4583:3;;4541:459;;;;5020:75;5053:12;5075:10;5088:6;5020:32;:75::i;:::-;4446:656;;4225:877;;;;;;;;;:::o;8367:970::-;8587:1;8578:6;:10;8570:64;;;;-1:-1:-1;;;8570:64:1;;8114:2:59;8570:64:1;;;8096:21:59;8153:2;8133:18;;;8126:30;8192:34;8172:18;;;8165:62;-1:-1:-1;;;8243:18:59;;;8236:39;8292:19;;8570:64:1;7912:405:59;8570:64:1;8684:12;8699:82;8710:12;8724:6;8732:12;8746;8760:10;8772:8;8699:10;:82::i;:::-;8862:5;:11;;;;;;;;;;;8684:97;;-1:-1:-1;8862:11:1;;8861:12;8853:55;;;;-1:-1:-1;;;8853:55:1;;8524:2:59;8853:55:1;;;8506:21:59;8563:2;8543:18;;;8536:30;8602:32;8582:18;;;8575:60;8652:18;;8853:55:1;8322:354:59;8853:55:1;8985:5;:11;;;;;;;;;;;;:18;;-1:-1:-1;;8985:18:1;8999:4;8985:18;;;9054:78;9111:10;;9061:12;;9054:78;;;;9075:6;;9083:12;;9097;;9123:8;;8912:25:59;;;-1:-1:-1;;;;;8973:32:59;;;8968:2;8953:18;;8946:60;9042:32;;9037:2;9022:18;;9015:60;9106:2;9091:18;;9084:34;8899:3;8884:19;;8681:443;9054:78:1;;;;;;;;9245:85;9282:12;9296:10;9316:4;9323:6;9245:36;:85::i;2289:428::-;2498:64;2503:12;2517:6;2525:12;2539;2553:8;2498:4;:64::i;:::-;2657:53;2686:12;2700:9;2657:28;:53::i;9992:426::-;10197:83;10210:8;10220:6;10228:12;10242;10256:13;10271:8;10197:12;:83::i;:::-;10343:68;10376:12;10390;10404:6;10343:32;:68::i;3266:455::-;3640:74;3646:8;3656:6;3664:12;3678:10;3690:13;3705:8;3640:5;:74::i;6952:838::-;7394:87;;;7405:15;7394:87;;;;9416:25:59;;;;9457:18;;;9450:34;;;9500:18;;;9493:34;;;-1:-1:-1;;;;;9563:32:59;;;9543:18;;;9536:60;9633:32;;9612:19;;;9605:61;9682:19;;;;9675:35;;;7394:87:1;;;;;;;;;;9388:19:59;;;7394:87:1;;;7384:98;;;;;;;;-1:-1:-1;;;7276:224:1;;;9979:27:59;7346:16:1;10022:11:59;;;10015:27;10058:12;;;10051:28;-1:-1:-1;;7226:343:1;;10095:12:59;;7276:224:1;;;-1:-1:-1;;7276:224:1;;;;;;;;;7249:265;;7276:224;7249:265;;;;7226:343;;;;;;;;;10345:25:59;10418:4;10406:17;;10386:18;;;10379:45;10440:18;;;10433:34;;;10483:18;;;10476:34;;;10317:19;;7226:343:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7226:343:1;;-1:-1:-1;;7226:343:1;;;-1:-1:-1;;;;;;;7587:30:1;;;;;;:66;;;7641:12;-1:-1:-1;;;;;7621:32:1;:16;-1:-1:-1;;;;;7621:32:1;;7587:66;7579:107;;;;-1:-1:-1;;;7579:107:1;;10723:2:59;7579:107:1;;;10705:21:59;10762:2;10742:18;;;10735:30;10801;10781:18;;;10774:58;10849:18;;7579:107:1;10521:352:59;7579:107:1;7697:86;7712:12;7726:6;7734:12;7748;7762:10;7774:8;7697:14;:86::i;:::-;7189:601;6952:838;;;;;;;;:::o;14362:504::-;14581:12;14596:85;14607:12;14621:6;14629:12;14643;14657:13;14672:8;14596:10;:85::i;:::-;14581:100;;14692:23;14710:4;14692:17;:23::i;:::-;14732:5;:11;;;;;;;;;;;14725:18;;-1:-1:-1;;14725:18:1;;;14759:20;14766:12;;14759:20;;;14790:69;14823:12;14837:13;14852:6;14790:32;:69::i;:::-;14571:295;14362:504;;;;;;:::o;13324:1032::-;13658:20;13681:34;13705:8;13688:26;;;;;;11007:19:59;;11051:2;11042:12;;10878:182;13688:26:1;;;;-1:-1:-1;;13688:26:1;;;;;;;;;;13681:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13658:57;;13726:12;13741:85;13752:12;13766:6;13774:12;13788;13802:13;13817:8;13741:10;:85::i;:::-;13726:100;;13904:23;13922:4;13904:17;:23::i;:::-;14259:5;:11;;;;;;;;;;;;14252:18;;-1:-1:-1;;14252:18:1;;;14320:29;;1193:25:59;;;14326:12:1;;14320:29;;1166:18:59;14320:29:1;;;;;;;13527:829;;13324:1032;;;;;;:::o;1299:403:4:-;1500:45;;;-1:-1:-1;;;;;11863:32:59;;;1500:45:4;;;11845:51:59;11912:18;;;;11905:34;;;1500:45:4;;;;;;;;;;11818:18:59;;;;1500:45:4;;;;;;;-1:-1:-1;;;;;1500:45:4;-1:-1:-1;;;1500:45:4;;;1489:57;;-1:-1:-1;;;;1489:10:4;;;;:57;;1500:45;1489:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:93;;;;1577:7;:57;;;;-1:-1:-1;1589:11:4;;:16;;:44;;;1620:4;1609:24;;;;;;;;;;;;:::i;:::-;1556:139;;;;-1:-1:-1;;;1556:139:4;;12434:2:59;1556:139:4;;;12416:21:59;12473:2;12453:18;;;12446:30;12512:34;12492:18;;;12485:62;-1:-1:-1;;;12563:18:59;;;12556:45;12618:19;;1556:139:4;12232:411:59;2390:455:4;2621:51;;;-1:-1:-1;;;;;12868:32:59;;;2621:51:4;;;12850::59;12937:32;;;12917:18;;;12910:60;12986:18;;;;12979:34;;;2621:51:4;;;;;;;;;;12823:18:59;;;;2621:51:4;;;;;;;-1:-1:-1;;;;;2621:51:4;-1:-1:-1;;;2621:51:4;;;2610:63;;-1:-1:-1;;;;2610:10:4;;;;:63;;2621:51;2610:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:99;;;;2704:7;:57;;;;-1:-1:-1;2716:11:4;;:16;;:44;;;2747:4;2736:24;;;;;;;;;;;;:::i;:::-;2683:155;;;;-1:-1:-1;;;2683:155:4;;13226:2:59;2683:155:4;;;13208:21:59;13265:2;13245:18;;;13238:30;13304:34;13284:18;;;13277:62;-1:-1:-1;;;13355:18:59;;;13348:49;13414:19;;2683:155:4;13024:415:59;649:199:4;728:12;745:2;-1:-1:-1;;;;;745:7:4;760:6;745:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:44;;;789:7;781:60;;;;-1:-1:-1;;;781:60:4;;13856:2:59;781:60:4;;;13838:21:59;13895:2;13875:18;;;13868:30;13934:34;13914:18;;;13907:62;-1:-1:-1;;;13985:18:59;;;13978:38;14033:19;;781:60:4;13654:404:59;781:60:4;717:131;649:199;;:::o;15063:147:1:-;15135:5;:11;;;;;;;;;;;;;15127:76;;;;-1:-1:-1;;;15127:76:1;;14265:2:59;15127:76:1;;;14247:21:59;14304:2;14284:18;;;14277:30;14343:34;14323:18;;;14316:62;-1:-1:-1;;;14394:18:59;;;14387:50;14454:19;;15127:76:1;14063:416:59;15127:76:1;15063:147;:::o;14:131:59:-;-1:-1:-1;;;;;89:31:59;;79:42;;69:70;;135:1;132;125:12;150:892;254:6;262;270;278;286;294;347:3;335:9;326:7;322:23;318:33;315:53;;;364:1;361;354:12;315:53;409:23;;;-1:-1:-1;529:2:59;514:18;;501:32;;-1:-1:-1;611:2:59;596:18;;583:32;624:33;583:32;624:33;:::i;:::-;676:7;-1:-1:-1;735:2:59;720:18;;707:32;748:33;707:32;748:33;:::i;:::-;800:7;-1:-1:-1;859:3:59;844:19;;831:33;873;831;873;:::i;:::-;150:892;;;;-1:-1:-1;150:892:59;;;;;1005:3;990:19;;;977:33;;-1:-1:-1;;150:892:59:o;1229:750::-;1324:6;1332;1340;1348;1356;1409:3;1397:9;1388:7;1384:23;1380:33;1377:53;;;1426:1;1423;1416:12;1377:53;1471:23;;;-1:-1:-1;1591:2:59;1576:18;;1563:32;;-1:-1:-1;1673:2:59;1658:18;;1645:32;1686:33;1645:32;1686:33;:::i;:::-;1738:7;-1:-1:-1;1797:2:59;1782:18;;1769:32;1810:33;1769:32;1810:33;:::i;:::-;1229:750;;;;-1:-1:-1;1229:750:59;;1942:3;1927:19;1914:33;;1229:750;-1:-1:-1;;1229:750:59:o;2173:367::-;2236:8;2246:6;2300:3;2293:4;2285:6;2281:17;2277:27;2267:55;;2318:1;2315;2308:12;2267:55;-1:-1:-1;2341:20:59;;2384:18;2373:30;;2370:50;;;2416:1;2413;2406:12;2370:50;2453:4;2445:6;2441:17;2429:29;;2513:3;2506:4;2496:6;2493:1;2489:14;2481:6;2477:27;2473:38;2470:47;2467:67;;;2530:1;2527;2520:12;2467:67;2173:367;;;;;:::o;2545:1567::-;2748:6;2756;2764;2772;2780;2788;2796;2804;2812;2865:3;2853:9;2844:7;2840:23;2836:33;2833:53;;;2882:1;2879;2872:12;2833:53;2921:9;2908:23;2940:31;2965:5;2940:31;:::i;:::-;2990:5;-1:-1:-1;3046:2:59;3031:18;;3018:32;3073:18;3062:30;;3059:50;;;3105:1;3102;3095:12;3059:50;3144:70;3206:7;3197:6;3186:9;3182:22;3144:70;:::i;:::-;3233:8;;-1:-1:-1;3118:96:59;-1:-1:-1;;3321:2:59;3306:18;;3293:32;3350:18;3337:32;;3334:52;;;3382:1;3379;3372:12;3334:52;3421:72;3485:7;3474:8;3463:9;3459:24;3421:72;:::i;:::-;3512:8;;-1:-1:-1;3395:98:59;-1:-1:-1;;3600:2:59;3585:18;;3572:32;3629:18;3616:32;;3613:52;;;3661:1;3658;3651:12;3613:52;3700:72;3764:7;3753:8;3742:9;3738:24;3700:72;:::i;:::-;3791:8;;-1:-1:-1;3674:98:59;-1:-1:-1;;3879:3:59;3864:19;;3851:33;3909:18;3896:32;;3893:52;;;3941:1;3938;3931:12;3893:52;3980:72;4044:7;4033:8;4022:9;4018:24;3980:72;:::i;:::-;3954:98;;4071:8;4061:18;;;4098:8;4088:18;;;2545:1567;;;;;;;;;;;:::o;4880:226::-;4939:6;4992:2;4980:9;4971:7;4967:23;4963:32;4960:52;;;5008:1;5005;4998:12;4960:52;-1:-1:-1;5053:23:59;;4880:226;-1:-1:-1;4880:226:59:o;5303:1158::-;5423:6;5431;5439;5447;5455;5463;5471;5479;5532:3;5520:9;5511:7;5507:23;5503:33;5500:53;;;5549:1;5546;5539:12;5500:53;5594:23;;;-1:-1:-1;5714:2:59;5699:18;;5686:32;;-1:-1:-1;5796:2:59;5781:18;;5768:32;5809:33;5768:32;5809:33;:::i;:::-;5861:7;-1:-1:-1;5920:2:59;5905:18;;5892:32;5933:33;5892:32;5933:33;:::i;:::-;5985:7;-1:-1:-1;6065:3:59;6050:19;;6037:33;;-1:-1:-1;6148:3:59;6133:19;;6120:33;6197:4;6184:18;;6172:31;;6162:59;;6217:1;6214;6207:12;6162:59;5303:1158;;;;-1:-1:-1;5303:1158:59;;;;;;6240:7;;-1:-1:-1;;;6320:3:59;6305:19;;6292:33;;6424:3;6409:19;6396:33;;5303:1158::o;7528:127::-;7589:10;7584:3;7580:20;7577:1;7570:31;7620:4;7617:1;7610:15;7644:4;7641:1;7634:15;7660:247;7719:6;7772:2;7760:9;7751:7;7747:23;7743:32;7740:52;;;7788:1;7785;7778:12;7740:52;7827:9;7814:23;7846:31;7871:5;7846:31;:::i;:::-;7896:5;7660:247;-1:-1:-1;;;7660:247:59:o;11065:412::-;11194:3;11232:6;11226:13;11257:1;11267:129;11281:6;11278:1;11275:13;11267:129;;;11379:4;11363:14;;;11359:25;;11353:32;11340:11;;;11333:53;11296:12;11267:129;;;-1:-1:-1;11451:1:59;11415:16;;11440:13;;;-1:-1:-1;11415:16:59;11065:412;-1:-1:-1;11065:412:59:o;11482:184::-;11552:6;11605:2;11593:9;11584:7;11580:23;11576:32;11573:52;;;11621:1;11618;11611:12;11573:52;-1:-1:-1;11644:16:59;;11482:184;-1:-1:-1;11482:184:59:o;11950:277::-;12017:6;12070:2;12058:9;12049:7;12045:23;12041:32;12038:52;;;12086:1;12083;12076:12;12038:52;12118:9;12112:16;12171:5;12164:13;12157:21;12150:5;12147:32;12137:60;;12193:1;12190;12183:12","linkReferences":{},"immutableReferences":{"342":[{"start":251,"length":32},{"start":1668,"length":32}],"344":[{"start":489,"length":32},{"start":1545,"length":32}]}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","TYPEHASH_REFUND()":"a9ab4d5b","claim(bytes32,uint256,address,address,address,uint256)":"bc586b28","claim(bytes32,uint256,address,address,uint256)":"cd413efa","claimBatch(address,bytes32[],uint256[],address[],uint256[])":"8579dc5f","hashValues(bytes32,uint256,address,address,address,uint256)":"7beb9d6d","lock(bytes32,uint256,address,address,uint256)":"91644b2b","lockPrepayMinerfee(bytes32,uint256,address,address,uint256)":"b8080ab8","refund(bytes32,uint256,address,address,address,uint256)":"0e5bbd59","refund(bytes32,uint256,address,address,uint256)":"36504721","refundCooperative(bytes32,uint256,address,address,uint256,uint8,bytes32,bytes32)":"fb35dd96","swaps(bytes32)":"eb84e7f2","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"Lockup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TYPEHASH_REFUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"preimages\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timelocks\",\"type\":\"uint256[]\"}],\"name\":\"claimBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"hashValues\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"lockPrepayMinerfee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"refundCooperative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"swaps\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(bytes32,uint256,address,address,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for the SHA256 hash of the preimage\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"claimAddress\":\"Address to which the claimed funds will be sent\",\"preimage\":\"Preimage of the swap\",\"refundAddress\":\"Address that locked the tokens in the contract\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\"}},\"claim(bytes32,uint256,address,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for the SHA256 hash of the preimage\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"preimage\":\"Preimage of the swap\",\"refundAddress\":\"Address that locked the tokens in the contract\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\"}},\"claimBatch(address,bytes32[],uint256[],address[],uint256[])\":{\"details\":\"All swaps that are claimed have to have \\\"msg.sender\\\" as \\\"claimAddress\\\" and the same token address\",\"params\":{\"amounts\":\"Amounts that are locked in the contract for the swap in WEI\",\"preimages\":\"Preimages of the swaps\",\"refundAddresses\":\"Addresses that locked the tokens in the contract\",\"timelocks\":\"Block heights after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token of the swap\"}},\"hashValues(bytes32,uint256,address,address,address,uint256)\":{\"params\":{\"amount\":\"Amount the swap has locked in the smallest denomination of the token\",\"claimAddress\":\"Address that can claim the locked tokens\",\"preimageHash\":\"Preimage hash of the swap\",\"refundAddress\":\"Address that locked the tokens and can refund them\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token of the swap\"},\"returns\":{\"_0\":\"Value hash of the swap\"}},\"lock(bytes32,uint256,address,address,uint256)\":{\"details\":\"This function is \\\"public\\\" so that it can be called from the outside and \\\"lockPrepayMinerfee\\\" function\",\"params\":{\"amount\":\"Amount to be locked in the contract\",\"claimAddress\":\"Address that can claim the locked tokens\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token to be locked\"}},\"lockPrepayMinerfee(bytes32,uint256,address,address,uint256)\":{\"details\":\"Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\",\"params\":{\"amount\":\"Amount that should be locked in the contract in the smallest denomination of the token\",\"claimAddress\":\"Address that can claim the locked tokens\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token that should be locked in the contract\"}},\"refund(bytes32,uint256,address,address,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \\\"claim\\\" function\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"claimAddress\":\"Address that was destined to claim the funds\",\"preimageHash\":\"Preimage hash of the swap\",\"refundAddress\":\"Address that locked the tokens in the contract\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\"}},\"refund(bytes32,uint256,address,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \\\"claim\\\" function\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"claimAddress\":\"Address that that was destined to claim the funds\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\"}},\"refundCooperative(bytes32,uint256,address,address,uint256,uint8,bytes32,bytes32)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \\\"claim\\\" function\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"claimAddress\":\"Address that that was destined to claim the funds\",\"preimageHash\":\"Preimage hash of the swap\",\"r\":\"second 32 bytes of the signature\",\"s\":\"first 32 bytes of the signature\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\",\"v\":\"final byte of the signature\"}}},\"stateVariables\":{\"swaps\":{\"details\":\"Mapping between value hashes of swaps and whether they have tokens locked in the contract\"},\"version\":{\"details\":\"Version of the contract used for compatibility checks\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(bytes32,uint256,address,address,address,uint256)\":{\"notice\":\"Claims tokens locked in the contract for a specified claim address\"},\"claim(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Claims tokens locked in the contract\"},\"claimBatch(address,bytes32[],uint256[],address[],uint256[])\":{\"notice\":\"Claims multiple swaps\"},\"hashValues(bytes32,uint256,address,address,address,uint256)\":{\"notice\":\"Hashes all the values of a swap with Keccak256\"},\"lock(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Locks tokens in the contractThe refund address is the sender of the transaction\"},\"lockPrepayMinerfee(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Locks tokens for a swap in the contract and forwards a specified amount of Ether to the claim addressThe amount of Ether forwarded to the claim address is the amount sent in the transaction and the refund address is the sender of the transaction\"},\"refund(bytes32,uint256,address,address,address,uint256)\":{\"notice\":\"Refunds tokens locked in the contract after the timeout for a specified refund address\"},\"refund(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Refunds tokens locked in the contract after the timeout\"},\"refundCooperative(bytes32,uint256,address,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Refunds tokens locked in the contract with an EIP-712 signature of the claimAddress\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Swap.sol\":\"ERC20Swap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=contracts/lib/forge-std/lib/ds-test/src/\",\":forge-std/=contracts/lib/forge-std/src/\"]},\"sources\":{\"contracts/ERC20Swap.sol\":{\"keccak256\":\"0x217bd40c88406c2f486da60e0ac9af288f1fd921792852d4ddf541ef38792e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99ed21749b3ab3612edb25fe4d4300199b7058614e715b7294e9d9243146f6fd\",\"dweb:/ipfs/QmPYJUhZ6bbPdfcipdwL5kCUZXAkebgMatnhQTFozv8d8T\"]},\"contracts/TransferHelper.sol\":{\"keccak256\":\"0x86e671dc0012fa050c7f446ecabd0cf47181c894a63e5ef4c60b0fbaaad5a694\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://79556ecc6628d9d1a28b1e3d6f362e149154fc8ede9c96f4c78af393262466c5\",\"dweb:/ipfs/QmTmKTCFkCib1oHqq9j21kK3duU6qGs32TKeWZUoL7vcw2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"preimage","type":"bytes32","indexed":false}],"type":"event","name":"Claim","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"tokenAddress","type":"address","indexed":false},{"internalType":"address","name":"claimAddress","type":"address","indexed":false},{"internalType":"address","name":"refundAddress","type":"address","indexed":true},{"internalType":"uint256","name":"timelock","type":"uint256","indexed":false}],"type":"event","name":"Lockup","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32","indexed":true}],"type":"event","name":"Refund","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TYPEHASH_REFUND","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"preimage","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"claimAddress","type":"address"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"bytes32","name":"preimage","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"bytes32[]","name":"preimages","type":"bytes32[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"},{"internalType":"uint256[]","name":"timelocks","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"claimBatch"},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"claimAddress","type":"address"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"pure","type":"function","name":"hashValues","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"claimAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"lock"},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address payable","name":"claimAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"payable","type":"function","name":"lockPrepayMinerfee"},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"claimAddress","type":"address"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"refund"},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"claimAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"refund"},{"inputs":[{"internalType":"bytes32","name":"preimageHash","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"claimAddress","type":"address"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"refundCooperative"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"swaps","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]}],"devdoc":{"kind":"dev","methods":{"claim(bytes32,uint256,address,address,address,uint256)":{"details":"To query the arguments of this function, get the \"Lockup\" event logs for the SHA256 hash of the preimage","params":{"amount":"Amount locked in the contract for the swap in the smallest denomination of the token","claimAddress":"Address to which the claimed funds will be sent","preimage":"Preimage of the swap","refundAddress":"Address that locked the tokens in the contract","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token locked for the swap"}},"claim(bytes32,uint256,address,address,uint256)":{"details":"To query the arguments of this function, get the \"Lockup\" event logs for the SHA256 hash of the preimage","params":{"amount":"Amount locked in the contract for the swap in the smallest denomination of the token","preimage":"Preimage of the swap","refundAddress":"Address that locked the tokens in the contract","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token locked for the swap"}},"claimBatch(address,bytes32[],uint256[],address[],uint256[])":{"details":"All swaps that are claimed have to have \"msg.sender\" as \"claimAddress\" and the same token address","params":{"amounts":"Amounts that are locked in the contract for the swap in WEI","preimages":"Preimages of the swaps","refundAddresses":"Addresses that locked the tokens in the contract","timelocks":"Block heights after which the locked tokens can be refunded","tokenAddress":"Address of the token of the swap"}},"hashValues(bytes32,uint256,address,address,address,uint256)":{"params":{"amount":"Amount the swap has locked in the smallest denomination of the token","claimAddress":"Address that can claim the locked tokens","preimageHash":"Preimage hash of the swap","refundAddress":"Address that locked the tokens and can refund them","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token of the swap"},"returns":{"_0":"Value hash of the swap"}},"lock(bytes32,uint256,address,address,uint256)":{"details":"This function is \"public\" so that it can be called from the outside and \"lockPrepayMinerfee\" function","params":{"amount":"Amount to be locked in the contract","claimAddress":"Address that can claim the locked tokens","preimageHash":"Preimage hash of the swap","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token to be locked"}},"lockPrepayMinerfee(bytes32,uint256,address,address,uint256)":{"details":"Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether","params":{"amount":"Amount that should be locked in the contract in the smallest denomination of the token","claimAddress":"Address that can claim the locked tokens","preimageHash":"Preimage hash of the swap","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token that should be locked in the contract"}},"refund(bytes32,uint256,address,address,address,uint256)":{"details":"To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \"claim\" function","params":{"amount":"Amount locked in the contract for the swap in the smallest denomination of the token","claimAddress":"Address that was destined to claim the funds","preimageHash":"Preimage hash of the swap","refundAddress":"Address that locked the tokens in the contract","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token locked for the swap"}},"refund(bytes32,uint256,address,address,uint256)":{"details":"To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \"claim\" function","params":{"amount":"Amount locked in the contract for the swap in the smallest denomination of the token","claimAddress":"Address that that was destined to claim the funds","preimageHash":"Preimage hash of the swap","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token locked for the swap"}},"refundCooperative(bytes32,uint256,address,address,uint256,uint8,bytes32,bytes32)":{"details":"To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \"claim\" function","params":{"amount":"Amount locked in the contract for the swap in the smallest denomination of the token","claimAddress":"Address that that was destined to claim the funds","preimageHash":"Preimage hash of the swap","r":"second 32 bytes of the signature","s":"first 32 bytes of the signature","timelock":"Block height after which the locked tokens can be refunded","tokenAddress":"Address of the token locked for the swap","v":"final byte of the signature"}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(bytes32,uint256,address,address,address,uint256)":{"notice":"Claims tokens locked in the contract for a specified claim address"},"claim(bytes32,uint256,address,address,uint256)":{"notice":"Claims tokens locked in the contract"},"claimBatch(address,bytes32[],uint256[],address[],uint256[])":{"notice":"Claims multiple swaps"},"hashValues(bytes32,uint256,address,address,address,uint256)":{"notice":"Hashes all the values of a swap with Keccak256"},"lock(bytes32,uint256,address,address,uint256)":{"notice":"Locks tokens in the contractThe refund address is the sender of the transaction"},"lockPrepayMinerfee(bytes32,uint256,address,address,uint256)":{"notice":"Locks tokens for a swap in the contract and forwards a specified amount of Ether to the claim addressThe amount of Ether forwarded to the claim address is the amount sent in the transaction and the refund address is the sender of the transaction"},"refund(bytes32,uint256,address,address,address,uint256)":{"notice":"Refunds tokens locked in the contract after the timeout for a specified refund address"},"refund(bytes32,uint256,address,address,uint256)":{"notice":"Refunds tokens locked in the contract after the timeout"},"refundCooperative(bytes32,uint256,address,address,uint256,uint8,bytes32,bytes32)":{"notice":"Refunds tokens locked in the contract with an EIP-712 signature of the claimAddress"}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","ds-test/=contracts/lib/forge-std/lib/ds-test/src/","forge-std/=contracts/lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/ERC20Swap.sol":"ERC20Swap"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/ERC20Swap.sol":{"keccak256":"0x217bd40c88406c2f486da60e0ac9af288f1fd921792852d4ddf541ef38792e11","urls":["bzz-raw://99ed21749b3ab3612edb25fe4d4300199b7058614e715b7294e9d9243146f6fd","dweb:/ipfs/QmPYJUhZ6bbPdfcipdwL5kCUZXAkebgMatnhQTFozv8d8T"],"license":"MIT"},"contracts/TransferHelper.sol":{"keccak256":"0x86e671dc0012fa050c7f446ecabd0cf47181c894a63e5ef4c60b0fbaaad5a694","urls":["bzz-raw://79556ecc6628d9d1a28b1e3d6f362e149154fc8ede9c96f4c78af393262466c5","dweb:/ipfs/QmTmKTCFkCib1oHqq9j21kK3duU6qGs32TKeWZUoL7vcw2"],"license":"GPL-3.0-or-later"}},"version":1},"id":1}